{
  "product_name": "Processor\u00A0Logic\u00A0Visualizer",
  "word": {
    "and_gate": "AND ゲート",
    "and_gate_full_name": "AND ゲート",
    "or_gate": "OR ゲート",
    "or_gate_full_name": "OR ゲート",
    "not_gate": "NOT ゲート",
    "not_gate_full_name": "NOT ゲート"
  },
  "home_page": {
    "title": "{product_name}へようこそ！",
    "you_can_learn": "ここでは次の内容を学ぶことができます...",
    "gate": {
      "title": "論理ゲート",
      "subtitle": "デジタル回路の基本構成要素で、信号の流れを制御し、基本的な論理演算を実現します",
      "content": "このセクションでは、AND、OR、NOT、NAND、NOR、XOR、XNORといった一般的な論理ゲートの動作原理を学ぶことができます"
    },
    "flip_flop": {
      "title": "フリップフロップ",
      "subtitle": "順序回路の重要な構成要素で、信号状態を保持および制御します",
      "content": "このセクションでは、RS型、D型、JK型、T型フリップフロップの動作原理や回路への応用について学びます"
    },
    "digital_circuit": {
      "title": "デジタル回路",
      "subtitle": "論理ゲートとフリップフロップを組み合わせ、正確な信号伝達と複雑な機能を実現します",
      "content": "このセクションでは、レジスタやカウンタなどの構成要素について解説し、それらが回路設計で果たす役割を説明します"
    },
    "cpu": {
      "title": "CPUの動作プロセス",
      "subtitle": "デジタル回路の集大成として、論理演算と信号の同期化により命令を実行します",
      "content": "このセクションでは、CPUの構造やフェッチ、デコード、実行、保存といった主要な動作プロセスをシミュレーションし、内部の協調メカニズムを理解します"
    },
    "next_page": "さあ、始めましょう！",
    "disclaimer": "本ウェブサイトの一部の画像やテキストはAIによって生成されており、教育および参考目的のために提供されています。不正確な内容が含まれる場合がありますのでご了承ください。実際の状況を優先してください"
  },
  "menu_page": {
    "menu": "メニュー",
    "menu_beginning": {
      "title": "概要の開始",
      "switches": "スイッチ",
      "claude_shannon": "リレーとスイッチング回路の記号解析"
    },
    "menu_logic_gates_base": {
      "title": "論理ゲート - 基本編",
      "and_gate": "AND ゲート",
      "or_gate": "OR ゲート",
      "not_gate": "NOT ゲート",
      "summary": "論理ゲート - 基本編の概要"
    },
    "menu_logic_gates_advance": {
      "title": "論理ゲート - 複合編",
      "nand_gate": "NAND ゲート",
      "nor_gate": "NOR ゲート",
      "xor_gate": "XOR ゲート",
      "xnor_gate": "XNOR ゲート",
      "summary": "論理ゲート - 複合編の概要"
    },
    "menu_digital_circuits_base": {
      "title": "デジタル回路 - 基本編",
      "half_adder": "半加算器",
      "full_adder": "全加算器"
    },
    "menu_flip_flops": {
      "title": "フリップフロップ",
      "rs_ff": "RS(リセット・セット型) フリップフロップ",
      "d_ff": "D(データ / ディレイ型) フリップフロップ",
      "jk_ff": "JK フリップフロップ",
      "t_ff": "T(トグル型) フリップフロップ",
      "et_ff": "エッジトリガ型 フリップフロップ"
    },
    "menu_digital_circuits_advance": {
      "title": "デジタル回路 - 上級編",
      "latch": "ラッチ回路",
      "rwm": "読み書きメモリ",
      "ram": "ランダムアクセスメモリ",
      "fd": "周波数分周器",
      "counter": "カウンタ回路"
    },
    "menu_cpu": {
      "title": "中央処理装置 (CPU / Central Processing Unit)",
      "excution_components": "シミュレーション中の構成要素区別",
      "cpu_excution_simulation": "CPU 実行シミュレーション"
    }
  },
  "switches_page": {
    "title": "スイッチ",
    "switch_on": "オン",
    "switch_off": "オフ",
    "explain": "コンピュータの世界は実はとても単純です。コンピュータが認識するのは、0 と 1 という 2 つの数字だけです。それはまるで哲学における 2 つの対立する思考のようで、1 は「はい」、0 は「いいえ」を意味します。コンピュータの基盤となる構造においては、0 はスイッチが切れている状態、1 はスイッチが入っている状態を表します",
    "next_section": "次へ"
  }
}
