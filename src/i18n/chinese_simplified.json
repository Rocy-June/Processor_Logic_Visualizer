{
  "product_name": "Processor\u00A0Logic\u00A0Visualizer",
  "word": {
    "and_gate": "与门",
    "and_gate_full_name": "与门 (AND gate)",
    "or_gate": "或门",
    "or_gate_full_name": "或门 (OR gate)",
    "not_gate": "非门",
    "not_gate_full_name": "非门 (NOT gate)",
    "nand_gate": "与非门",
    "nand_gate_full_name": "与非门 (NAND gate)",
    "nor_gate": "或非门",
    "nor_gate_full_name": "或非门 (NOR gate)",
    "xor_gate": "异或门",
    "xor_gate_full_name": "异或门 (XOR gate)",
    "xnor_gate": "同或门",
    "xnor_gate_full_name": "同或门 (XNOR gate)"
  },
  "home_page": {
    "title": "欢迎来到 {product_name}！",
    "you_can_learn": "在这里，你将可以学到…",
    "gate": {
      "title": "逻辑门",
      "subtitle": "数字电路的基础单元，控制信号流向并执行基本逻辑运算",
      "content": "在此部分，您可以直观了解常见逻辑门（如 AND、OR、NOT、NAND、NOR、XOR、XNOR）的工作原理"
    },
    "flip_flop": {
      "title": "触发器",
      "subtitle": "时序电路的核心，用于存储和控制信号状态",
      "content": "本部分展示多种触发器（如 RS、D、JK、T）的状态切换规则及其在电路中的应用"
    },
    "digital_circuit": {
      "title": "数字电路",
      "subtitle": "逻辑门和触发器的组合，通过精确传递信号构建复杂功能",
      "content": "本部分介绍寄存器、计数器等元件及其在电路设计中的作用"
    },
    "cpu": {
      "title": "CPU 的执行过程",
      "subtitle": "数字电路的集大成者，通过逻辑运算和信号协调实现指令执行",
      "content": "本部分模拟 CPU 架构及取指、译码、执行等关键流程，展示其内部协作机制"
    },
    "next_page": "让我们开始吧！",
    "disclaimer": "本网站部分图片与文案由人工智能生成，仅供学习和参考之用。如有任何不准确之处，敬请谅解，并以实际情况为准。"
  },
  "menu_page": {
    "menu": "菜单",
    "menu_beginning": {
      "title": "开始介绍",
      "switches": "开关",
      "claude_shannon": "《继电器和开关电路的符号分析》"
    },
    "menu_logic_gates_base": {
      "title": "逻辑门 - 基础部分",
      "and_gate": "与门 (AND Gate)",
      "or_gate": "或门 (OR Gate)",
      "not_gate": "非门 (NOT Gate)",
      "summary": "逻辑门 - 基础部分总结"
    },
    "menu_logic_gates_advance": {
      "title": "逻辑门 - 进阶部分",
      "nand_gate": "与非门 (NAND Gate)",
      "nor_gate": "或非门 (NOR Gate)",
      "xor_gate": "异或门 (XOR Gate)",
      "xnor_gate": "同或门 (XNOR Gate)",
      "summary": "逻辑门 - 进阶部分总结"
    },
    "menu_digital_circuits_base": {
      "title": "数字电路 - 基础部分",
      "half_adder": "半加器 (Half Adder)",
      "full_adder": "全加器 (Full Adder)"
    },
    "menu_flip_flops": {
      "title": "触发器 (FF / Flip-Flop)",
      "rs_ff": "RS 触发器 (Reset-Set FF)",
      "d_ff": "D 触发器 (Data / Delay FF)",
      "jk_ff": "JK 触发器",
      "t_ff": "T 触发器 (Toggle FF)",
      "et_ff": "边沿触发器 (Edge-Triggered FF)"
    },
    "menu_digital_circuits_advance": {
      "title": "数字电路 - 进阶部分",
      "latch": "锁存器 (Latche)",
      "rwm": "读写存储器 (RWM / Read Write Memory)",
      "ram": "随机存储器 (RAM / Random Access Memory)",
      "fd": "分频器 (Frequency Divider)",
      "counter": "计数器 (Counter)"
    },
    "menu_cpu": {
      "title": "中央处理器 (CPU / Central Processing Unit)",
      "excution_components": "区分模拟中的各个部件",
      "cpu_excution_simulation": "CPU 执行模拟"
    }
  },
  "switches_page": {
    "title": "开关",
    "switch_on": "开",
    "switch_off": "关",
    "explain": "计算机的世界其实很简单，它只认识两个数字，0 和 1，就像哲学的两种对立思维一样，1 表示“是”，0 表示“否”。而对于计算机的底层结构来讲，0 代表开关断开，1 代表开关闭合",
    "next_section": "下一章节"
  },
  "claude_shannon_page": {
    "title": "《继电器和开关电路的符号分析》",
    "source_tip": "图片来自克劳德·香农的维基百科页面",
    "who_am_i": "我是谁？",
    "claude_shannon": "克劳德·艾尔伍德·香农 (Claude\u00A0Elwood\u00A0Shannon)",
    "born": "出生于{born_on}",
    "born_on": "1916年4月30日",
    "died": "逝世于{died_on}",
    "died_on": "2001年2月24日",
    "aged": "享年84岁",
    "introduce": "如果需要计算机实现计算，则要通过开关电路建立起逻辑关系。开关电路和逻辑之间的联系，首先是由克劳德·艾尔伍德·香农（以下简称“香农”）建立起来的。香农于1937年，在他的麻省理工学院硕士毕业论文中给出了，电子开关可以通过多种方式的连接来实现任何逻辑功能的结论。这可能是有史以来最有影响力的硕士论文（之一）。香农在论文中指出，开关可以通过不同的连接组合执行简单的逻辑任务，这种开关的组合叫做逻辑门。构成计算机最基本的逻辑门有：与门、或门和非门。接下来，我们详细讲讲这些逻辑门...",
    "reveal": "揭晓",
    "next_section": "下一章节"
  },
  "and_gate_page": {
    "title": "与门 (AND Gate)",
    "explain": "与门是指将两个开关串联起来，只有当两个输入开关都启用（为 1）时，输出才会被激活（为 1）。否则只要任意一个输入开关是关闭状态，输出都不会被激活（为 0）。其逻辑关系表示为真值表如下：",
    "next_section": "下一章节"
  },
  "or_gate_page": {
    "title": "或门 (OR Gate)",
    "explain": "或门是指将两个开关并联起来，只要任意一个输入开关被启用（为 1），输出都会被激活（为 1）。只有当两个输入开关都关闭时，输出才不会被激活（为 0）。其逻辑关系表示为真值表如下：",
    "next_section": "下一章节"
  },
  "not_gate_page": {
    "title": "非门 (NOT Gate)",
    "explain": "非门是指将输入状态反转后输出的门电路。当输入开关启用（为 1）时，输出不会被激活（为 0）。当输入开关没被启用（为 0）时，输出才会被激活（为 1）。其逻辑关系表示为真值表如下：",
    "next_section": "下一章节"
  },
  "logic_gates_base_summary": {
    "title": "逻辑门 - 基础部分总结",
    "explain": "刚刚的三个章节中讲到的“与门”、“或门”和“非门”是逻辑电路中的基本的门电路。通过它们的组合，我们就可以构成各种复杂的逻辑电路。例如我们接下来要讲的“与非门”、“或非门”、“异或门”和“同或门”，甚至更加复杂的“触发器”以及“半加器”、“全加器”等电路，都是基于这些基本门电路的组合而成的。",
    "next_section": "下一章节"
  },
  "nand_gate_page": {
    "title": "与非门 (NAND Gate)",
    "explain": "与非门是指将与门的输出反转，即两个输入开关都启用（为 1）时，输出不会被激活（为 0）。否则任意一个输入开关是关闭状态，输出都会被激活（为 1）。其逻辑关系表示为真值表如下：",
    "next_section": "下一章节"
  },
  "nor_gate_page": {
    "title": "或非门 (NOR Gate)",
    "explain": "或非门是指将或门的输出反转，即两个输入开关都关闭（为 0）时，输出被激活（为 1）。否则任意一个输入开关是启用状态，输出都不会被激活（为 0）。其逻辑关系表示为真值表如下：",
    "next_section": "下一章节"
  },
  "xor_gate_page": {
    "title": "异或门 (XOR Gate)",
    "explain": "异或门是指两个输入开关的状态相反时，则输出被激活（为 1）。否则两个输入开关的状态相同时，输出不会被激活（为 0）。其逻辑关系表示为真值表如下：",
    "next_section": "下一章节"
  },
  "xnor_gate_page": {
    "title": "同或门 (XNOR Gate)",
    "explain": "同或门，又称异或非门。是指两个输入开关的状态相同时，则输出被激活（为 1）。否则两个输入开关的状态相反时，输出不会被激活（为 0）。其逻辑关系表示为真值表如下：",
    "next_section": "下一章节"
  },
  "logic_gates_advanced_summary": {
    "title": "逻辑门 - 进阶部分总结",
    "explain": "刚刚的四个章节中讲到的“与非门”、“或非门”、“异或门”和“同或门”是逻辑电路中的进阶门电路。通过它们的组合，我们就可以构成更加复杂的逻辑电路。例如我们接下来要讲的“触发器”以及“半加器”、“全加器”等电路，都是基于这些进阶门电路的组合而成的。",
    "next_section": "下一章节"
  },

  "recommend_aspect_ratio_dialog": {
    "title": "非常抱歉...",
    "content": "<span>当前设备的屏幕分辨率比例可能导致页面显示效果不佳。<br/>为获得最佳体验，请在屏幕分辨率比例大于 4:3 的情况下访问本页面。<br/><br/>您可以尝试以下方法解决此问题：<br/>1. <span class=\"b\">使用更大的设备</span>：如果您正在使用小型移动设备，建议更换为电脑或中大型平板设备以提升显示效果。<br/>2. <span class=\"b\">调整折叠设备</span>：若您使用的是折叠设备，请展开屏幕以增加显示范围。<br/>3. <span class=\"b\">调整平板设备方向</span>：如果您使用平板设备，请关闭屏幕旋转锁定并旋转屏幕至横向模式以优化显示效果。<br/>4. <span class=\"b\">检查电脑或笔记本</span>：若您使用的是笔记本或台式电脑，但仍然看到此提示，可能是因为您解锁了某种隐藏“技能”，建议您尝试以正常方式使用本项目。<br/><br/>如需反馈问题或提供建议，欢迎在本项目的 GitHub 页面提交 Issue，我们将及时跟进并改进。</span>"
  }
}
